<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Kassian Sun</title><link>https://kassiansun.github.io/</link><description>Recent content on Kassian Sun</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 02 Dec 2021 12:13:43 +0800</lastBuildDate><atom:link href="https://kassiansun.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick Start Guide with create-react-app (TypeScript + Eslint + Prettier)</title><link>https://kassiansun.github.io/posts/create-react-app-typescript-eslint/</link><pubDate>Thu, 02 Dec 2021 12:13:43 +0800</pubDate><guid>https://kassiansun.github.io/posts/create-react-app-typescript-eslint/</guid><description>Why use create-react-app Originally I was using a manually written webpack script to build my react project. The reason was to reduce the length of package-lock.json. But as I&amp;rsquo;m diving deeper into the frontend ecosystem, it doesn&amp;rsquo;t look like a good choice to wait for frontend guys fixing the dependency hell. So instead of waiting for a neat solution, I need to find a quick solution.
As part of the lessons I learned from handwriting webpack scripts, it&amp;rsquo;s hard to build a complete and reusable scaffold to build a React.</description></item><item><title>Migrate From Bash to Zsh</title><link>https://kassiansun.github.io/posts/migrate-from-bash-to-zsh/</link><pubDate>Sun, 28 Nov 2021 10:14:21 +0800</pubDate><guid>https://kassiansun.github.io/posts/migrate-from-bash-to-zsh/</guid><description>The story of bash and my taste on command line I&amp;rsquo;ve been using bash as the development environment for a long time. The reason for choosing bash is its ubiquity. Most desktop &amp;amp; server Linux distributions and Docker images will ship with bash, which makes it a great fit for a configure-once-use-everywhere development environment. So you write it once and copy it to every host you&amp;rsquo;ll write code on. But since ~2014 my bash configuration has degraded several times, for two major reasons:</description></item><item><title>Hugo on Github Pages Returns 404</title><link>https://kassiansun.github.io/posts/hugo-404-github-pages/</link><pubDate>Mon, 22 Nov 2021 11:59:11 +0800</pubDate><guid>https://kassiansun.github.io/posts/hugo-404-github-pages/</guid><description>Although followed the official documentation and got it built correctly, the GitHub page still returns 404. After some investigation with Branches and Pages settings of my GitHub repository, I realize that built means a different thing for GitHub. Since the pages are built by Hugo, GitHub doesn&amp;rsquo;t build the page anymore (unlike the Jekyll I used before). So the source branch shouldn&amp;rsquo;t be master, but gh-pages, after switching Source to the correct branch, it works now.</description></item><item><title>Hugo Extended Mode on Github Pages</title><link>https://kassiansun.github.io/posts/hugo-extended-github-pages/</link><pubDate>Mon, 22 Nov 2021 11:35:34 +0800</pubDate><guid>https://kassiansun.github.io/posts/hugo-extended-github-pages/</guid><description>When I was trying to push this repository to GitHub, by following the Quick Start and Host on GitHub, GitHub actions failed to build with this error message:
Error: Error building site: TOCSS: failed to transform &amp;#34;ananke/css/main.css&amp;#34; (text/css). Check your Hugo installation; you need the extended version to build SCSS/SASS.: this feature is not available in your current Hugo version, see https://goo.gl/YMrWcn for more information So the answer is simple, comment the #extended: true in .</description></item><item><title>Hello Word</title><link>https://kassiansun.github.io/posts/hello-word/</link><pubDate>Mon, 22 Nov 2021 11:03:54 +0800</pubDate><guid>https://kassiansun.github.io/posts/hello-word/</guid><description>Yes, this is my first post.
Recently I&amp;rsquo;m reading &amp;lt;Own Your Tech Career&amp;gt;, the idea of the book is great. Although I don&amp;rsquo;t know the author personally, we share many same thoughts on technology, career, and life. The most important thing I learned is how to get engaged in communities &amp;amp; build a personal brand. One thing is writing personal blogs, so here it is.
To be honest, I didn&amp;rsquo;t create this website by blindly following another guy&amp;rsquo;s idea.</description></item></channel></rss>